plugins {
	id 'com.jfrog.artifactory' version '4.11.0' apply false
	id 'com.jfrog.bintray' version '1.8.4' apply false
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}


subprojects {
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.artifactory'
	apply plugin: 'com.jfrog.bintray'

	sourceCompatibility = '1.8'

	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/milestone' }
		if (version.endsWith('SNAPSHOT')) {
			maven { url 'https://repo.spring.io/libs-snapshot' }
			maven {
				url 'https://oss.jfrog.org/artifactory/oss-snapshot-local'
			}
		}
	}

	dependencyManagement {
		imports {
			mavenBom "io.projectreactor:reactor-bom:${reactorBomVersion}"
			mavenBom "io.rsocket:rsocket-bom:${rsocketVersion}"
			mavenBom "org.junit:junit-bom:${junitJupiterVersion}"
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
		}

		dependencies {
			dependency "com.netflix.archaius:archaius2-core:${archaius2Version}"
			dependency "org.assertj:assertj-core:${assertjVersion}"
		}
	}

	java {
		withJavadocJar()
		withSourcesJar()
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				versionMapping {
					usage('java-api') {
						fromResolutionOf('runtimeClasspath')
					}
					usage('java-runtime') {
						fromResolutionResult()
					}
				}
			}
		}
	}

	// from https://reflectoring.io/publish-snapshots-with-gradle/
	artifactory {
		contextUrl = 'https://oss.jfrog.org'
		publish {
			repository {
				repoKey = 'oss-snapshot-local'
				username = System.getenv('BINTRAY_USER')
				password = System.getenv('BINTRAY_KEY')
			}
			defaults {
				publications(publishing.publications.mavenJava)
				publishArtifacts = true
				publishPom = true
			}
		}
		resolve {
			repoKey = 'jcenter'
		}
		clientConfig.info.setBuildNumber(System.getProperty('build.number'))
	}

	test {
		useJUnitPlatform()
	}

}

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}
